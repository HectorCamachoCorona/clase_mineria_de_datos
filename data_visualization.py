# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SySeFpj2Qn5NVKOLd5kWiV78zeOZ1x9f
"""

from google.colab import files
import pandas as pd

uploaded = files.upload()

from google.colab import files
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="whitegrid")

def cargar_y_limpiar_datos(ruta_csv: str) -> pd.DataFrame:
    df = pd.read_csv(ruta_csv)
    df['year'] = pd.to_datetime(df['year'], format='%Y')
    df["brand"] = df["name"].str.split().str[0]
    df["model"] = df["name"].str.split().str[1:].apply(lambda x: ' '.join(x))
    return df

ruta = "CAR DETAILS FROM CAR DEKHO.csv"
columnas = ['name', 'year', 'selling_price', 'km_driven', 'fuel', 'seller_type', 'transmission', 'owner']
df = pd.read_csv(ruta, names=columnas, skiprows=1)
df = cargar_y_limpiar_datos(ruta)
df = df.drop(columns=["name"])
df = df[['brand', 'model', 'year', 'selling_price', 'km_driven', 'fuel', 'seller_type', 'transmission', 'owner']]
df.to_csv('datos_limpios.csv', index=False)
files.download('datos_limpios.csv')


def clasificar_precio(precio):
    if precio < 100000:
        return 'Barato'
    elif 100000 <= precio <= 400000:
        return 'Medio'
    else:
        return 'Caro'

def clasificar_auto(fecha):
    año = fecha.year
    if año < 2010:
        return 'Antiguo'
    elif 2010 <= año <= 2017:
        return 'Medio'
    else:
        return 'Reciente'

df = pd.read_csv('datos_limpios.csv')
df['year'] = pd.to_datetime(df['year'])

precios_promedio = df.groupby(['brand', 'model'])['selling_price'].mean().reset_index()
precios_promedio.columns = ['Marca', 'Modelo', 'Precio Promedio']
precios_promedio = precios_promedio.sort_values(by='Precio Promedio', ascending=False)

precios_promedio_marca = df.groupby('brand')['selling_price'].mean().reset_index()
precios_promedio_marca = precios_promedio_marca.sort_values(by='selling_price', ascending=False)

df['categoria_antiguedad'] = df['year'].apply(clasificar_auto)
df['categoria_precio'] = df['selling_price'].apply(clasificar_precio)
df['precios_promedio_marca'] = df['brand'].map(precios_promedio_marca.set_index('brand')['selling_price'])

df = df.sort_values(by='selling_price', ascending=False)

promedio_precio_antiguedad = df.groupby('categoria_antiguedad')['selling_price'].mean().reset_index()
promedio_precio_antiguedad.columns = ['Categoría de Antigüedad', 'Promedio de Precio']
promedio_precio_antiguedad = promedio_precio_antiguedad.sort_values(by='Promedio de Precio', ascending=False)

promedio_precio_categoria = df.groupby('categoria_precio')['selling_price'].mean().reset_index()
promedio_precio_categoria.columns = ['Categoría de Precio', 'Promedio de Precio']
promedio_precio_categoria = promedio_precio_categoria.sort_values(by='Promedio de Precio', ascending=False)


df[['brand', 'model', 'year', 'categoria_antiguedad']].to_csv('detalle_vehiculos.csv', index=False)
df[['brand', 'model', 'year', 'selling_price', 'categoria_precio']].to_csv('detalle_precio_categoria.csv', index=False)
precios_promedio[['Marca', 'Modelo', 'Precio Promedio']].to_csv('precios_promedio_modelo.csv', index=False)
precios_promedio_marca.to_csv('precios_promedio_marca.csv', index=False)
promedio_precio_antiguedad.to_csv('promedio_precio_antiguedad.csv', index=False)
promedio_precio_categoria.to_csv('promedio_precio_categoria.csv', index=False)

# 1.Precio promedio por marca
plt.figure(figsize=(10, 8))
sns.barplot(data=precios_promedio_marca.head(20), y='brand', x='selling_price', palette='viridis')
plt.title('Precio Promedio por Marca (Top 20)')
plt.xlabel('Precio Promedio')
plt.ylabel('Marca')
plt.tight_layout()
plt.savefig('grafico_precio_promedio_marca.png')
files.download('grafico_precio_promedio_marca.png')

# 2.Precio promedio por antigüedad
plt.figure(figsize=(6, 5))
sns.barplot(data=promedio_precio_antiguedad, x='Categoría de Antigüedad', y='Promedio de Precio', palette='pastel')
plt.title('Precio Promedio según Antigüedad del Vehículo')
plt.tight_layout()
plt.savefig('grafico_precio_antiguedad.png')
files.download('grafico_precio_antiguedad.png')

# 3.Precio promedio por categoría de precio
plt.figure(figsize=(6, 5))
sns.barplot(data=promedio_precio_categoria, x='Categoría de Precio', y='Promedio de Precio', palette='Set2')
plt.title('Promedio de Precio según Categoría Económica')
plt.tight_layout()
plt.savefig('grafico_precio_categoria.png')
files.download('grafico_precio_categoria.png')

# 4.Top 10 modelos más caros
top_10_modelos = precios_promedio.head(10)
plt.figure(figsize=(10, 6))
sns.barplot(data=top_10_modelos, y='Modelo', x='Precio Promedio', hue='Marca', dodge=False, palette='coolwarm')
plt.title('Top 10 Modelos con Precio Promedio Más Alto')
plt.tight_layout()
plt.savefig('grafico_top_10_modelos.png')
files.download('grafico_top_10_modelos.png')